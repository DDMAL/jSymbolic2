/*
 * AceXmlConverter.java
 * Version 2.0
 *
 * Last modified on Oct. 10, 2016.
 * McGill University, Marianopolis College and the University of Waikato.
 */

package jsymbolic2.processing;

import java.io.File;

/**
 * Static holder class for methods for converting ACE XML files to other file formats.
 *
 * @author Cory McKay and Tristano Tenaglia
 */
public final class AceXmlConverter
{
    /**
     * Convert the given ACE XML Feature Values file to a Weka ARFF and/or CSV file.
	 * 
	 * <p>The ARFF file will have a relation name of Converted_from_ACE_XML.</p>
	 * 
	 * <p>The first row of the CSV file will list the feature names (with multi-dimensional features including
	 * a feature index number added at the end of the feature name). Each other row will consist of first the
	 * instance identifier, followed by the value of each feature.</p>
     *
     * @param ace_xml_feature_values_input_file	The ACE XML Feature Values file to convert.
	 * @param ace_xml_feature_definitions_file	The ACE XML Feature Definitions file corresponding to the
	 *											features in ace_xml_feature_values_input_file.
     * @param save_ARFF							True if a Weka ARFF file containing the contenst of the 
	 *											ace_xml_feature_values_input_file file is to be generated.
     * @param save_CSV							True if a CSV file containing the contents of the 
	 *											ace_xml_feature_values_input_file is to be generated.
     * @return									An object that containing the paths of files that were
	 *											generated by this method.
     * @throws Exception						An informative exception is thrown if the input file could not
	 *											be successfully parsed and converted.
     */
    public static AceConversionPaths saveAsArffOrCsvFiles( String ace_xml_feature_values_input_file,
														   String ace_xml_feature_definitions_file,
                                                           boolean save_ARFF,
                                                           boolean save_CSV )
		throws Exception 
	{
		// Set output file paths. Make sure extensions are appropriate.
        String output_arff_file_path;
        String output_csv_file_path;
        if(ace_xml_feature_values_input_file.endsWith(".xml"))
		{
            output_arff_file_path = ace_xml_feature_values_input_file.replaceAll(".xml", ".arff");
            output_csv_file_path = ace_xml_feature_values_input_file.replaceAll(".xml", ".csv");
        } else
		{
            output_arff_file_path = ace_xml_feature_values_input_file + ".arff";
            output_csv_file_path = ace_xml_feature_values_input_file + ".csv";
        }
		
        // Parse the ACE XML file
        ace.datatypes.DataBoard instance_data = null;
        try
		{
			String[] input_files = new String[1];
            input_files[0] = ace_xml_feature_values_input_file;
            instance_data = new ace.datatypes.DataBoard(null, ace_xml_feature_definitions_file, input_files, null);
        }
		catch (Exception e)
		{
            System.err.println("ERROR: Could not succesfully parse the file specified at that path: " + ace_xml_feature_values_input_file + ". Perhaps this file does not exist, or is not a valid ACE XML Feature Values file?");
            throw e;
        }

        // Convert ACE XML to Weka ARFF and save it
        if (save_ARFF)
		{
			try
			{
				String relation_name = "Converted_from_ACE_XML";
				instance_data.saveToARFF(relation_name, new File(output_arff_file_path), true, true);
			}
			catch (Exception e)
			{
				//e.printStackTrace();
				throw new Exception("ERROR: Could not succesfully save the Weka ARFF file to the path:" + output_arff_file_path + ". Perhaps you do not have write permission?");
			}		
		}

        // Convert ACE XML to CSV and save it
        if (save_CSV)
		{
			try
			{
				instance_data.saveToCSV(new File(output_csv_file_path), true, true, true, true, true);
			}
			catch (Exception e)
			{
				//e.printStackTrace();
				throw new Exception("ERROR: Could not succesfully save the CSV file to the path:" + output_csv_file_path + ". Perhaps you do not have write permission?");
			}		
		}
		
		// Return the paths of the saved files
        return new AceConversionPaths(output_arff_file_path, output_csv_file_path);
    }
}